<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
  ~
  ~ Copyright 2008-2013 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="getting-started">
  <title>Starting a new GWT based Geomajas project</title>

  <para>Geomajas uses the Apache Maven project management tool for its build
  and documentation process. The easiest way to start using Geomajas is by
  creating a new project using the Maven archetype. This will create a simple
  working project that you can use as a starting point.</para>

  <section id="prereq">
    <title>Prerequisites / Command line</title>

    <para>To create the simple project with the Maven archetype, you need to
    install Maven on your system. Maven can be downloaded from <ulink
    url="http://maven.apache.org/">http://maven.apache.org/</ulink>. We
    recommend using the latest stable version (2.2.1 at the time of writing).
    Installing Maven is quite simple: unzip the distribution file in the
    directory of your choice and make some environment changes so you can run
    the executable <code>mvn</code>. More information for your specific OS can
    be found at the bottom of <ulink
    url="http://maven.apache.org/download.html">http://maven.apache.org/download.html</ulink>.</para>
  </section>

  <section id="createArchetype">
    <title>Create your Geomajas project</title>

    <para>At this point it is assumed that Maven has been successfully
    installed. Using Maven, you can now create your Geomajas project, called
    the Geomajas GWT Application archetype.</para>

    <orderedlist>
      <listitem>
        <para><emphasis>Step1</emphasis>: Go to the folder you want to create
        the Geomajas application in, and execute the following command:</para>

        <example>
          <title>Create project using Maven archetype</title>

          <programlisting>mvn archetype:generate -DarchetypeCatalog=http://files.geomajas.org/archetype-catalog.xml</programlisting>
        </example>

        <para>Maven will now prompt the user for input.</para>

        <note>
          <para>If anything fails with these Maven commands, you need to check
          the output to check the problem. One typical problem is the need to
          define a proxy to allow Maven to access external repository
          websites. See the <ulink
          url="http://maven.apache.org/guides/mini/guide-proxies.html">http://maven.apache.org/guides/mini/guide-proxies.html</ulink>
          for details.</para>
        </note>
      </listitem>

      <listitem>
        <para><emphasis>Step2</emphasis>: Maven will display the full list of
        available archetypes. Make sure you select the correct one: <emphasis
        role="bold">geomajas-gwt-archetype</emphasis>. In the image below, the
        correct number would be 36:</para>

        <figure>
          <title>Choose the correct archetype</title>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/select-archetype.png" width="75%" />
            </imageobject>
          </mediaobject>
        </figure>
      </listitem>

      <listitem>
        <para><emphasis>Step3</emphasis>: Next Maven asks for the <emphasis
        role="bold">groupId</emphasis>. Often the package name is used, but
        any other name will do (e.g. myGroupId).</para>
      </listitem>

      <listitem>
        <para><emphasis>Step4</emphasis>: Next Maven asks for the <emphasis
        role="bold">artifactId</emphasis>. This represents the name for your
        application (e.g. myApp).</para>

        <note>
          <para>The artifactId cannot contain special characters!</para>
        </note>
      </listitem>

      <listitem>
        <para><emphasis>Step5</emphasis>: Next Maven asks for the first
        version for your application. 1.0-SNAPSHOT is a good first
        version.</para>
      </listitem>

      <listitem>
        <para><emphasis>Step6</emphasis>: Next Maven asks for the base package
        wherein to place Java files. By default this is the same as the
        groupId. Just hit "enter" to continue with the default or enter
        another package name (e.g. my.app).</para>

        <figure>
          <title>Screenshot when building the Geomajas GWT archetype</title>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/run-archetype.png" width="75%" />
            </imageobject>
          </mediaobject>
        </figure>
      </listitem>
    </orderedlist>

    <tip>
      <para>You have now created a Geomajas project! Now you are ready to run
      it.</para>
    </tip>
  </section>

  <section id="runArchetype">
    <title>Run your Geomajas project</title>

    <orderedlist>
      <listitem>
        <para><emphasis>Step1</emphasis>: Go to the folder with the artifactId
        name (myApp in the example above) and execute the following
        command:</para>

        <example>
          <title>Build the project and run it</title>

          <programlisting>mvn install jetty:run</programlisting>
        </example>

        <para>The "install" target will create a web archive (.war file) for
        the project in the <code>target</code> directory. This .war file can
        be dropped into a Java application container such as Tomcat.</para>

        <para>The "jetty:run" target will immediately start a jetty server and
        start the application in it. Jetty is a Java application container
        that can run your project without the need to install a separate Java
        application.</para>
      </listitem>

      <listitem>
        <para><emphasis>Step2</emphasis>: Open a web browser and access your
        Geomajas application at <ulink
        url="http://localhost:8080/">http://localhost:8080/</ulink>.</para>
      </listitem>
    </orderedlist>
  </section>

  <section id="ConfigureArchetype">
    <title>Configure your Geomajas project</title>

    <para>Once you have your Geomajas project running, you might want to make
    some modifications to the Geomajas configuration and customize it. More
    details about the Geomajas configuration can be found in the <ulink
    url="http://files.geomajas.org/maven/trunk/geomajas/docbook-devuserguide/html/master.html#part-configuration">developer's
    guide</ulink>.</para>

    <para>Here you find the most important configuration files used in your
    Geomajas project:</para>

    <itemizedlist>
      <listitem>
        <para>main configuration :
        src/main/webapp/WEB-INF/applicationContext.xml</para>
      </listitem>

      <listitem>
        <para>map configuration : src/main/webapp/WEB-INF/mapMain.xml</para>
      </listitem>

      <listitem>
        <para>overview map configuration :
        src/main/webapp/WEB-INF/mapOverview.xml</para>
      </listitem>

      <listitem>
        <para>countries layer configuration :
        src/main/webapp/WEB-INF/clientLayerCountries.xml and
        src/main/webapp/WEB-INF/layerCountries.xml</para>
      </listitem>

      <listitem>
        <para>OpenStreetMap layer configuration :
        src/main/webapp/WEB-INF/clientLayerOsm.xml and
        src/main/webapp/WEB-INF/layerOsm.xml</para>
      </listitem>

      <listitem>
        <para>GWT configuration file :
        src/main/java/Application.gwt.xml</para>
      </listitem>

      <listitem>
        <para>web.xml: src/main/webapp/WEB-INF/web.xml</para>
      </listitem>
    </itemizedlist>

    <para>If you have the jetty server running and you make changes to the
    configuration, press ENTER to reload the application without stopping the
    server.</para>
  </section>

  <section id="ConfigureDatabase">
    <title>Getting started with database layers</title>

    <para>The Geomajas sample application comes with a predefined layer
    configuration for PostgreSQL/PostGIS and SQLServer databases
    (configurations for other supported databases like Oracle and MySQL can be
    added in a similar way).</para>

    <para>To activate the database layer, the following steps should be
    taken:</para>

    <orderedlist>
      <listitem>
        <para>Create the sample database. This should be a spatially enabled
        database with name 'app' and login user 'app' with password
        'app'.</para>
      </listitem>

      <listitem>
        <para>Import the layer data in the database. For reference , the data
        is provided as a shape file in the directory:
        src/main/resources/context/shapes/road.shp. There are also 2 scripts
        available for both the PostGIS and SQLServer databases:
        src/main/webapp/WEB-INF/example/road_postgres.sql and
        src/main/webapp/WEB-INF/example/road_sqlserver.sql. These can be run
        from PgAdmin or SQL Server Management Studio respectively.</para>
      </listitem>

      <listitem>
        <para>Uncomment the necessary dependencies in your pom.xml file.
        Geomajas provides 2 layer plugins that can work with databases:
        Geotools layer and Hibernate layer plugin. The Geotools layer plugin
        does not require the creation of a Java mapping, which makes it easier
        to configure, but it also has no support for complex attributes
        (many-to-one, one-to-many). The Hibernate layer plugin does require
        Java mapping objects (have a look at the Road.java class to see how
        the mapping works) but offers complex attribute support instead. The
        choice of layer plugin will depend on the needs of your application
        and whether or not you want to make use of the advanced feature
        editing capabilities of Geomajas. As an example, for the Geotools
        layer with a PostGIS database, the following dependencies should be
        uncommented:<programlisting>&lt;!-- uncomment if you want to use geotools with postgis, for another db you will need similar dependencies --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.postgis&lt;/groupId&gt;
  &lt;artifactId&gt;postgis-jdbc&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;postgresql&lt;/groupId&gt;
  &lt;artifactId&gt;postgresql&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting></para>
      </listitem>

      <listitem>
        <para>Uncomment the necessary application context entries in your
        web.xml file. This is necessary to add the roads layer to your Spring
        context definition. The specific entries to uncomment will again
        depend on your choice of layer plugin and database. For he Geotools
        layer with a PostGIS database, the following entries should be
        uncommented:<programlisting>&lt;!-- To use Roads layer stored in PostGIS through GeoTools layer, uncomment the following --&gt;
WEB-INF/example/geotools/mapMain.xml
WEB-INF/example/geotools/spring-geotools.xml
WEB-INF/example/geotools/clientLayerRoads.xml
&lt;!-- for PostGIS --&gt;
WEB-INF/example/geotools/postgis/layerRoads.xml</programlisting></para>
      </listitem>

      <listitem>
        <para>Restart your application. An editable road layer should
        appear.</para>
      </listitem>
    </orderedlist>
  </section>

  <section id="cont">
    <title>How to continue</title>

    <para>The archetype generates a dependency on the geomajas-dep project to
    manage the version of the Geomajas dependencies. This project exists for
    the sole purpose of keeping track of the latest released versions. It is
    quite likely that a new version of geomajas-dep has been released since
    the latest release of the archetype. Therefore, we recommend you update
    this dependency to the latest version. You can check the latest version
    using this URL: <ulink
    url="http://repo.geomajas.org/nexus/index.html#nexus-search;quick~geomajas-dep">http://repo.geomajas.org/nexus/index.html#nexus-search;quick~geomajas-dep</ulink>.</para>

    <para>References which may be interesting to read:</para>

    <para><itemizedlist>
        <listitem>
          <para>GWT project page: <ulink
          url="http://code.google.com/webtoolkit/">http://code.google.com/webtoolkit/</ulink>.</para>
        </listitem>

        <listitem>
          <para>SmartGWT showcase: <ulink
          url="http://www.smartclient.com/smartgwt/showcase/">http://www.smartclient.com/smartgwt/showcase/</ulink>.</para>
        </listitem>

        <listitem>
          <para>DZone's GWT refcardz: <ulink
          url="http://refcardz.dzone.com/refcardz/gwt-style-configuration-and-js">http://refcardz.dzone.com/refcardz/gwt-style-configuration-and-js</ulink>.</para>

          <para></para>
        </listitem>

        <listitem>
          <para>Spring documentation: <ulink
          url="http://www.springsource.org/documentation">http://www.springsource.org/documentation</ulink>.</para>
        </listitem>

        <listitem>
          <para>DZone's Spring configuration refcardz: <ulink
          url="http://refcardz.dzone.com/refcardz/spring-configuration">http://refcardz.dzone.com/refcardz/spring-configuration</ulink>.</para>

          <para></para>
        </listitem>

        <listitem>
          <para>Maven project: <ulink
          url="http://maven.apache.org/">http://maven.apache.org/</ulink>.</para>
        </listitem>

        <listitem>
          <para>Maven by example book: <ulink
          url="http://www.sonatype.com/books/mvnex-book/reference/public-book.html">http://www.sonatype.com/books/mvnex-book/reference/public-book.html</ulink>.</para>
        </listitem>

        <listitem>
          <para>Maven reference book: <ulink
          url="http://www.sonatype.com/books/mvnref-book/reference/public-book.html">http://www.sonatype.com/books/mvnref-book/reference/public-book.html</ulink>.</para>
        </listitem>

        <listitem>
          <para>DZone's maven 2 refcardz: <ulink
          url="http://refcardz.dzone.com/refcardz/apache-maven-2">http://refcardz.dzone.com/refcardz/apache-maven-2</ulink>.</para>
        </listitem>
      </itemizedlist></para>
  </section>
</chapter>
